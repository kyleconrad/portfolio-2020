// Buttons

a:focus,
button:focus {
	outline: none;
}



button {
	padding: 0;
	margin: 0;

	font-size: 1em;

	background: none;

	box-shadow: 0;

	border: 0;
	border-radius: 0;

	outline: none;
	
	appearance: none;

	cursor: pointer;
}





//// Logo
.logo {
	position: fixed;
	top: calc( ( var( --padding ) * 1.5 ) + 5px );
	left: calc( ( var( --padding ) * 1.5 ) + 5px );

	min-width: var( --logoMin );
	width: var( --logo );
	min-height: var( --logoMin );
	height: var( --logo );

	@extend .bkg--gradient;
	@extend .bkg--gradient--stop;

	@extend .border;
	@extend .border--1;
	@extend .border--transparent;

	border-radius: 100%;

	transition: border 0.25 ease-in-out;

	will-change: transform;



	div {
		width: 100%;
		height: 100%;

		overflow: hidden;
	}



	.nav--open & {
		@extend .border--black;
	}
}

.logo__padding {
	padding: 7.5%;



	&:before,
	&:after {
		position: absolute;
		bottom: 0;
		left: 0;

		width: 100%;
		height: 500%;

		background-size: 400px auto;
		background-position: center top;

		transform: translate3d( 0, 80%, 0 );

		animation: logo-slide 120s linear infinite;
		animation-direction: normal;

		z-index: 1;

		content: '';
	}

	&:before {
		background-image: url( '../images/patterns/bkg__topo--invert.png' );

		z-index: 1;
	}

	&:after {
		background-image: url( '../images/patterns/bkg__topo.png' );

		opacity: 0;

		z-index: 2;
	}



	.nav--open & {
		&:before,
		&:after {
			animation-direction: reverse;
		}

		&:before {
			opacity: 0;
		}

		&:after {
			opacity: 1;
		}
	}
}

.logo__border {
	@extend .bkg--gradient;
	@extend .bkg--gradient--stop;

	@extend .border;
	@extend .border--1;
	@extend .border--transparent;

	border-radius: 100%;



	.nav--open & {
		@extend .border--black;
	}
}

.logo__interior {
	@extend .bkg--black;



	.nav--open & {
		background-color: transparent;
	}
}



@keyframes logo-slide {
	from {
		transform: translate3d( 0, 80%, 0 );
	}

	to {
		transform: translate3d( 0, 0, 0 );
	}
}





//// Video
.video__control {
	position: absolute;

	left: calc( var( --padding ) * 0.5 );
	right: calc( var( --padding ) * 0.5 );
	bottom: calc( var( --padding ) * 0.5 );

	width: calc( 100% - var( --padding ) );
	height: 5px;

	transition: opacity 0.15s ease-in-out;



	@media ( hover: hover ) and ( pointer: fine ) {
		opacity: 0.25;



		.video__container:hover & {
			opacity: 1;
		}
	}



	& > .flex--grow {
		height: 100%;
	}
}



.video__control__progress__container,
.video__control__input {
	position: absolute;
	left: 0;
	right: 0;
	bottom: 0;

	width: 100%;
}



.video__control__progress__container {
	top: 0;

	height: 100%;
}

.video__control__progress {
	position: absolute;
	left: 0;
	right: 0;
	bottom: 0;
	top: 0;

	height: 100%;
	width: 100%;

	transform: translateX( -100% );
	transition: transform 0.1s ease-in-out;

	pointer-events: none;
}



.video__control__input {
	padding: 0;
	margin: 0;

	appearance: none;
	background: transparent;
	border: 0;
	outline: none;

	cursor: pointer;



	&:focus {
		outline: none;
	}
}

.video__control__input::-webkit-slider-runnable-track {
	width: 100%;

	height: 5px;

	background: rgba( map-get( $colors, white ), 0.25 );
}

.video__control__input::-moz-range-track {
	width: 100%;

	height: 5px;

	background: rgba( map-get( $colors, white ), 0.25 );
}

.video__control__input::-webkit-slider-thumb {
	appearance: none;

	height: 50px;
	width: 50px;

	margin-top: -22.5px;

	background: map-get( $colors, white );

	opacity: 0;
}

.video__control__input::-moz-range-thumb {
	appearance: none;

	height: 50px;
	width: 50px;

	background: map-get( $colors, white );

	opacity: 0;
}



.video__control__sound {
	width: 40px;

	transform: translateY( 50% );



	& > svg {
		width: 100%;
		height: auto;
	}



	.video__control__sound--playing {
		display: block;


		
		.video--mute & {
			display: none;
		}
	}

	.video__control__sound--mute {
		display: none;



		.video--mute & {
			display: block;
		}
	}



	@include breakpoint( mobile ) {
		display: none;
	}
}

.video__control__sound__color-top {
	stop-color: var( --colorTop );
}

.video__control__sound__color-bottom {
	stop-color: var( --colorBottom );
}



.video__overlay {
	position: absolute;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;

	width: 100%;
	height: 100%;



	//// Cursors
	$white: str-slice( #{ map-get( $colors, white ) }, 2 );
	$black: str-slice( #{ map-get( $colors, black ) }, 2 );



	cursor: url( 'data:image/svg+xml;utf8,<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="46px" height="46px" viewBox="0 0 46 46" xml:space="preserve"><line fill="none" stroke="%23#{ $black }" stroke-width="4" stroke-linecap="square" stroke-miterlimit="10" x1="18.6" y1="14" x2="18.6" y2="32"/><line fill="none" stroke="%23#{ $white }" stroke-width="2" stroke-linecap="square" stroke-miterlimit="10" x1="18.6" y1="14" x2="18.6" y2="32"/><line fill="none" stroke="%23#{ $black }" stroke-width="4" stroke-linecap="square" stroke-miterlimit="10" x1="27.4" y1="14" x2="27.4" y2="32"/><line fill="none" stroke="%23#{ $white }" stroke-width="2" stroke-linecap="square" stroke-miterlimit="10" x1="27.4" y1="14" x2="27.4" y2="32"/><circle fill="none" stroke="%23#{ $black }" stroke-width="4" stroke-miterlimit="10" cx="23" cy="23" r="21"/><circle fill="none" stroke="%23#{ $white }" stroke-width="2" stroke-miterlimit="10" cx="23" cy="23" r="21"/></svg>' ) 23 23, pointer;
	cursor: url( 'data:image/svg+xml;utf8,<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="46px" height="46px" viewBox="0 0 46 46" xml:space="preserve"><circle fill="none" stroke="%23#{ $black }" stroke-width="4" cx="23" cy="23" r="21"/><circle fill="none" stroke="%23#{ $white }" stroke-width="2" cx="23" cy="23" r="21"/><polygon fill="none" stroke="%23#{ $black }" stroke-width="4" stroke-miterlimit="10" points="30.4,23 19,14 19,32 "/><polygon fill="none" stroke="%23#{ $white }" stroke-width="2" stroke-miterlimit="10" points="30.4,23 19,14 19,32 "/></svg>' ) 23 23, pointer;



	.video--playing & {
		cursor: url( 'data:image/svg+xml;utf8,<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="46px" height="46px" viewBox="0 0 46 46" xml:space="preserve"><line fill="none" stroke="%23#{ $black }" stroke-width="4" stroke-linecap="square" stroke-miterlimit="10" x1="18.6" y1="14" x2="18.6" y2="32"/><line fill="none" stroke="%23#{ $white }" stroke-width="2" stroke-linecap="square" stroke-miterlimit="10" x1="18.6" y1="14" x2="18.6" y2="32"/><line fill="none" stroke="%23#{ $black }" stroke-width="4" stroke-linecap="square" stroke-miterlimit="10" x1="27.4" y1="14" x2="27.4" y2="32"/><line fill="none" stroke="%23#{ $white }" stroke-width="2" stroke-linecap="square" stroke-miterlimit="10" x1="27.4" y1="14" x2="27.4" y2="32"/><circle fill="none" stroke="%23#{ $black }" stroke-width="4" stroke-miterlimit="10" cx="23" cy="23" r="21"/><circle fill="none" stroke="%23#{ $white }" stroke-width="2" stroke-miterlimit="10" cx="23" cy="23" r="21"/></svg>' ) 23 23, pointer;
	}
}